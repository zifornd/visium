---
title: "Merge samples"
params:
  elbow_range:
    - "1:20"
  cluster:
    - "res.0.3"
  cluster.plot: ["res.0.2", "res.0.3"]
  n.neighbors:
    - 30
  min.dist:
    - 0.3
  perplexity:
    - "N^1/2"
  plot_width:
    - 5
  plot_height:
    - 4
---

# Setup

Add child documents

```{r}
#| child = "analysis/big-data.qmd"
```

Restore project dependencies:

```{r}
#renv::restore()
```

Load Bioconductor packages:

```{r}
#| message: false
#| warning: false

library(Seurat)
```

Load CRAN packages:

```{r}
#| message: false
#| warning: false

library(patchwork)
library(ggplot2)
library(dplyr)
library(reshape2)
library(viridis)
library(clustree)
```

Source user-defined functions:

```{r}
source("scripts/loadInSpatial.R")
source("scripts/normalise.R")
source("scripts/reduceDims.R")
source("scripts/cluster.R")
```

# Processing

Read experiment object:

```{r}
seurat <- readRDS("output/05-clustering.rds")
```

## Merge samples

```{r}
#| message: false
#| warning: false

seurat <- seuratMerge(seurat)
```

## Dim Reduc

### PCA

PCA individual samples

```{r}
#| message: false
#| warning: false

seurat <- pca(seurat)
```

### Plot PCAs

Individual PCA - dimplot

```{r}
#| message: false
#| warning: false
#| fig.width: params$plot_width
#| fig.height: params$plot_height
#| fig-cap: PCA plot Merged by group.

dimplot(seurat, reduction = "pca", label = FALSE, group.by = "Group", title = "PCA-Merged")
```

Individual PCA - featureplot ncount

```{r}
#| message: false
#| warning: false
#| fig.width: params$plot_width
#| fig.height: params$plot_height
#| fig-cap: PCA plot Merged by nCount.

featureplot(seurat, reduction = "pca", label = FALSE, feature = "nCount_Spatial", title = "PCA-Merged")
```

Individual PCA - featureplot nfeature

```{r}
#| message: false
#| warning: false
#| fig.width: params$plot_width
#| fig.height: params$plot_height
#| fig-cap: PCA plot Merged by nFeature.

featureplot(seurat, reduction = "pca", label = FALSE, feature = "nFeature_Spatial", title = "PCA-Merged")
```

### Elbow

```{r}
#| message: false
#| warning: false
#| fig.width: params$plot_width
#| fig.height: params$plot_height
#| fig-cap: Elbow plot Merged.

elbow(seurat, vline1 = 10, vline2 = 20, title = "Elbow-Merged")
```

From visual inspection it looks like the PCs for merged samples should be between 10-20

Define elbow vector:

```{r}
#| warning: false

elbow_vector <- params$elbow_range

print(elbow_vector)
```

Add PC elbow to object

```{r}
#| message: false
#| warning: false

seurat$Elbow <- rep(elbow_vector, length(seurat$Sample))
```

### UMAP

n.neighbors should be in the range 5 to 50. min.dist sensible values are in the range 0.001 to 0.5.

```{r}
#| label: Explore-Features-UMAP
#| warning: false
#| message: false
#| results: hide

seurat_1 <- umap(seurat, n.neighbors = 30, min.dist = 0.3)

seurat_2 <- umap(seurat, n.neighbors = 5, min.dist = 0.25)

seurat_3 <- umap(seurat, n.neighbors = 10, min.dist = 0.1)

seurat_4 <- umap(seurat, n.neighbors = 20, min.dist = 0.1)

seurat_5 <- umap(seurat, n.neighbors = 10, min.dist = 0.001)
```

UMAP n.neighbors = 30, min.dist = 0.3

```{r}
#| fig.width: params$plot_width
#| fig.height: params$plot_height
#| fig-cap: UMAP Merged n.neighbors = 30, min.dist = 0.3.

dimplot(seurat_1, reduction = "umap", label = FALSE, group.by = "Group", title = "UMAP-Merged n.neighbors = 30, min.dist = 0.3")
```

UMAP n.neighbors = 5, min.dist = 0.25

```{r}
#| fig.width: params$plot_width
#| fig.height: params$plot_height
#| fig-cap: UMAP Merged n.neighbors = 5, min.dist = 0.25.

dimplot(seurat_2, reduction = "umap", label = FALSE, group.by = "Group", title = "UMAP-Merged n.neighbors = 5, min.dist = 0.25")
```

UMAP n.neighbors = 10, min.dist = 0.1

```{r}
#| fig.width: params$plot_width
#| fig.height: params$plot_height
#| fig-cap: UMAP Merged n.neighbors = 10, min.dist = 0.1.

dimplot(seurat_3, reduction = "umap", label = FALSE, group.by = "Group", title = "UMAP-Merged n.neighbors = 10, min.dist = 0.1")
```

UMAP n.neighbors = 20, min.dist = 0.1

```{r}
#| fig.width: params$plot_width
#| fig.height: params$plot_height
#| fig-cap: UMAP Merged n.neighbors = 20, min.dist = 0.1.

dimplot(seurat_4, reduction = "umap", label = FALSE, group.by = "Group", title = "UMAP-Merged n.neighbors = 20, min.dist = 0.1")
```

UMAP n.neighbors = 10, min.dist = 0.001

```{r}
#| fig.width: params$plot_width
#| fig.height: params$plot_height
#| fig-cap: UMAP Merged n.neighbors = 10, min.dist = 0.001.

dimplot(seurat_5, reduction = "umap", label = FALSE, group.by = "Group", title = "UMAP-Merged n.neighbors = 10, min.dist = 0.001")
```

Clean up workspace

```{r}
rm(seurat_1, seurat_2, seurat_3, seurat_4, seurat_5)
gc()
```

### Chosen params UMAP

Run UMAP individual samples for choice of params (standard seems fine) UMAP n.neighbors = 30, min.dist = 0.3

```{r}
#| warning: false
#| message: false
#| results: hide

print("n.neighbors: ", params$n.neighbors)
print("min.dist: ", params$min.dist)

seurat <- umap(seurat, n.neighbors = params$n.neighbors, min.dist = params$min.dist)
```

### TSNE

perplexity parameter (should not be bigger than 3 \* perplexity \< nrow(X) - 1) NB: Try N\^1/2 as rule of thumb

### Chosen params TSNE

perplexity = N\^1/2

```{r}
#| warning: false
#| message: false
#| results: hide

print("perplexity: ", params$perplexity)

seurat <- tsne(seurat, perplexity = params$perplexity)
```

```{r}
#| fig.width: params$plot_width
#| fig.height: params$plot_height
#| fig-cap: TSNE Merged chosen params.

dimplot(seurat, reduction = "tsne", label = FALSE, group.by = "Group", title = "TSNE-Merged")
```

### Check scale data required

nCount_Spatial

```{r}
#| fig.width: params$plot_width
#| fig.height: params$plot_height
#| fig-cap: UMAP Merged chosen params nCounts.

featureplot(seurat, reduction = "umap", label = FALSE, feature = "nCount_Spatial", title = "UMAP-Merged")
```

nFeature_Spatial

```{r}
#| fig.width: params$plot_width
#| fig.height: params$plot_height
#| fig-cap: UMAP Merged chosen params nFeatures.

featureplot(seurat, reduction = "umap", label = FALSE, feature = "nFeature_Spatial", title = "UMAP-Merged")
```

nCount_Spatial

```{r}
#| fig.width: params$plot_width
#| fig.height: params$plot_height
#| fig-cap: TSNE Merged chosen params nCounts.

featureplot(seurat, reduction = "tsne", label = FALSE, feature = "nCount_Spatial", title = "TSNE-Merged")
```

nFeature_Spatial

```{r}
#| fig.width: params$plot_width
#| fig.height: params$plot_height
#| fig-cap: TSNE Merged chosen params nFeatures.

featureplot(seurat, reduction = "tsne", label = FALSE, feature = "nFeature_Spatial", title = "TSNE-Merged")
```

## Cluster

### SNN

```{r}
#| warning: false
#| message: false
#| results: hide

seurat_1 <- snnCluster(seurat, k.param = 5, resolution = 0.1)
seurat_2 <- snnCluster(seurat, k.param = 10, resolution = 0.3)
seurat_3 <- snnCluster(seurat, k.param = 15, resolution = 0.5)
seurat_4 <- snnCluster(seurat, k.param = 20, resolution = 0.6)
seurat_5 <- snnCluster(seurat, k.param = 50, resolution = 0.8)
```

#### Plot umaps

k.param = 5, resolution = 0.1

```{r}
#| fig.width: params$plot_width
#| fig.height: (params$plot_height + 1)
#| fig-cap: UMAP Merged k.param = 5, resolution = 0.1.

dimplot(seurat_1, reduction = "umap", label = T, group.by = "seurat_clusters", title = "UMAP-Merged, k.param = 5, resolution = 0.1")
```

k.param = 10, resolution = 0.3

```{r, fig.width = params$plot_width, fig.height = (params$plot_height + 1)}
#| fig.width: params$plot_width
#| fig.height: (params$plot_height + 1)
#| fig-cap: UMAP Merged k.param = 10, resolution = 0.3.

dimplot(seurat_2, reduction = "umap", label = T, group.by = "seurat_clusters", title = "UMAP-Merged, k.param = 10, resolution = 0.3")
```

k.param = 15, resolution = 0.5

```{r, fig.width = params$plot_width, fig.height = (params$plot_height + 1)}
#| fig.width: params$plot_width
#| fig.height: (params$plot_height + 1)
#| fig-cap: UMAP Merged k.param = 15, resolution = 0.5.

dimplot(seurat_3, reduction = "umap", label = T, group.by = "seurat_clusters", title = "UMAP-Merged, k.param = 15, resolution = 0.5")
```

k.param = 20, resolution = 0.6

```{r, fig.width = params$plot_width, fig.height = (params$plot_height + 1)}
#| fig.width: params$plot_width
#| fig.height: (params$plot_height + 1)
#| fig-cap: UMAP Merged k.param = 20, resolution = 0.6.

dimplot(seurat_4, reduction = "umap", label = T, group.by = "seurat_clusters", title = "UMAP-Merged, k.param = 20, resolution = 0.6")
```

k.param = 50, resolution = 0.8

```{r, fig.width = params$plot_width, fig.height = (params$plot_height + 1)}
#| fig.width: params$plot_width
#| fig.height: (params$plot_height + 1)
#| fig-cap: UMAP Merged k.param = 50, resolution = 0.8.

dimplot(seurat_5, reduction = "umap", label = T, group.by = "seurat_clusters", title = "UMAP-Merged, k.param = 50, resolution = 0.8")
```

Clean up workspace

```{r}
rm(seurat_1, seurat_2, seurat_3, seurat_4, seurat_5)
gc()
```

#### Keeping k stable (saving into seurat object for clustree)

```{r}
#| warning: false
#| message: false
#| results: hide

seurat <- snnCluster(seurat, k.param = 20, resolution = 0.1)
seurat <- snnCluster(seurat, k.param = 20, resolution = 0.2)
seurat <- snnCluster(seurat, k.param = 20, resolution = 0.3)
seurat <- snnCluster(seurat, k.param = 20, resolution = 0.5)
seurat <- snnCluster(seurat, k.param = 20, resolution = 0.6)
seurat <- snnCluster(seurat, k.param = 20, resolution = 0.8)
```

#### Plot umaps with k.params 20

k.param = 20, resolution = 0.1

```{r}
#| fig.width: params$plot_width
#| fig.height: (params$plot_height + 1)
#| fig-cap: UMAP Merged k.param = 20, resolution = 0.1.

dimplot(seurat, reduction = "umap", label = T, group.by = "res.0.1", title = "UMAP-Merged, k.param = 20, resolution = 0.1")
```

k.param = 20, resolution = 0.2

```{r}
#| fig.width: params$plot_width
#| fig.height: (params$plot_height + 1)
#| fig-cap: UMAP Merged k.param = 20, resolution = 0.2.

dimplot(seurat, reduction = "umap", label = T, group.by = "res.0.2", title = "UMAP-Merged, k.param = 20, resolution = 0.2")
```

k.param = 20, resolution = 0.3

```{r}
#| fig.width: params$plot_width
#| fig.height: (params$plot_height + 1)
#| fig-cap: UMAP Merged k.param = 20, resolution = 0.3.

dimplot(seurat, reduction = "umap", label = T, group.by = "res.0.3", title = "UMAP-Merged, k.param = 20, resolution = 0.3")
```

k.param = 20, resolution = 0.5

```{r}
#| fig.width: params$plot_width
#| fig.height: (params$plot_height + 1)
#| fig-cap: UMAP Merged k.param = 20, resolution = 0.5.

dimplot(seurat, reduction = "umap", label = T, group.by = "res.0.5", title = "UMAP-Merged, k.param = 20, resolution = 0.5")
```

k.param = 20, resolution = 0.6

```{r}
#| fig.width: params$plot_width
#| fig.height: (params$plot_height + 1)
#| fig-cap: UMAP Merged k.param = 20, resolution = 0.6.

dimplot(seurat, reduction = "umap", label = T, group.by = "res.0.6", title = "UMAP-Merged, k.param = 20, resolution = 0.6")
```

k.param = 20, resolution = 0.8

```{r}
#| fig.width: params$plot_width
#| fig.height: (params$plot_height + 1)
#| fig-cap: UMAP Merged k.param = 20, resolution = 0.8.

dimplot(seurat, reduction = "umap", label = T, group.by = "res.0.8", title = "UMAP-Merged, k.param = 20, resolution = 0.8")
```

### Clustree

Across k = 20 (seurat default)

Using clustree for checking cluster stability across params

```{r}
#| warning: false
#| message: false
#| fig.width: 10
#| fig.height: 10
#| fig-cap: Clustree dendrogram across chosen k param.

clustreeRun(seurat)
```

### Silhouette

Across k = 20 (seurat default)

A cell with a large positive width is closer to other cells from the same cluster compared to cells from different clusters. On the other hand, low or negative widths indicate that cells from different clusters are not well separated.

```{r}
#| warning: false
#| message: false

silhouettes_1 <- silhouette(seurat, clustername = "res.0.2", sample = "merged")
silhouettes_2 <- silhouette(seurat, clustername = "res.0.3", sample = "merged")
silhouettes_3 <- silhouette(seurat, clustername = "res.0.5", sample = "merged")
silhouettes_4 <- silhouette(seurat, clustername = "res.0.6", sample = "merged")
silhouettes_5 <- silhouette(seurat, clustername = "res.0.8", sample = "merged")
```

```{r}
#| warning: false
#| message: false

silhouette_plots_1 <- plotSil(silhouettes_1, type = "boxplot", title = "res.0.2")
silhouette_plots_2 <- plotSil(silhouettes_2, type = "boxplot", title = "res.0.3")
silhouette_plots_3 <- plotSil(silhouettes_3, type = "boxplot", title = "res.0.5")
silhouette_plots_4 <- plotSil(silhouettes_4, type = "boxplot", title = "res.0.6")
silhouette_plots_5 <- plotSil(silhouettes_5, type = "boxplot", title = "res.0.8")
```

#### Wrap plot silhouette

```{r, fig.width = 12, fig.height = 10}
#| fig.width: 12
#| fig.height: 10
#| fig-cap: Silhouette plots across res params.

wrap_plots(silhouette_plots_1,
           silhouette_plots_2,
           silhouette_plots_3,
           silhouette_plots_4,
           silhouette_plots_5,
           ncol = 2)
```

Clean up workspace

```{r}
rm(silhouettes_1, silhouettes_2, silhouettes_3, silhouettes_4, silhouettes_5)
gc()
```

### Spatial plot

#### Chosen Res

```{r}
#| warning: false
#| message: false

sdplot1 <- plotSpatialCluster(seurat, label = TRUE, label.size = 3, group = params$cluster.plot[[1]])

sdplot2 <- plotSpatialCluster(seurat, label = TRUE, label.size = 3, group = params$cluster.plot[[2]])
```

params$cluster.plot[[1]]

```{r}
#| fig.width: 25
#| fig.height: 10
#| fig-cap: Spatial plots across chosen res 1.

wrap_plots(sdplot1, ncol = 3)
```

params$cluster.plot[[2]]

```{r}
#| fig.width: 25
#| fig.height: 10
#| fig-cap: Spatial plots across chosen res 2.

wrap_plots(sdplot2, ncol = 3)
```

### Chosen params

```{r}
seurat <- addLabel(seurat, chosenCluster = params$cluster)
```

# Output

Save experiment object:

```{r}
saveRDS(seurat, file = "output/06-merge-samples.rds")
```

Print session information:

```{r}
sessionInfo()
```
