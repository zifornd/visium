---
title: "Data loading"
params:
    prefix:
      - "data/"
    metrics:
      - "Visium_FFPE_Mouse_Brain_metrics_summary.csv"
    marker:
    - "Hoxa5"
    sample.sheet:
    - "Visium_FFPE_Mouse_Brain_Samples.csv"
---

# Setup

Parameter description

```{r}
#| code-fold: true

par <- list(

list(
Parameter = "prefix",
Value = params$prefix,
Description = "Name of data folder for 10x spatial output."
),
list(
Parameter = "metrics",
Value = params$metrics,
Description = "Name of metrics csv file containing qc data for processed samples."
),
list(
Parameter = "marker",
Value = params$marker,
Description = "Name of marker gene expected to be expressed in data."
),
list(
Parameter = "sample.sheet",
Value = params$sample.sheet,
Description = "Name of sample sheet with details of samples profiled. Should be within 10x data folder defined in params$prefix."
)
)

par <- jsonlite::toJSON(par, pretty = TRUE)

knitr::kable(jsonlite::fromJSON(par))
```

```{r, setup, include=FALSE}
# knitr::opts_knit$set(root.dir = "C:/Users/Ben/Documents/GitHub/visium")
```

Restore project dependencies:

```{r}
#renv::restore()
```

Load Bioconductor packages:

```{r}
#| message: false
#| warning: false

library(Seurat)
```

Source user-defined functions:

```{r}
source("scripts/loadInSpatial.R")
```

# Processing

## Reading in

Read in sample sheet which contains all meta data required for processing. 

```{r}
metadata <- read.csv(paste0(params$prefix, params$sample.sheet))
```

Load in experiment object with all samples as a list

For details on test data set please see:

https://www.10xgenomics.com/resources/datasets/adult-mouse-brain-ffpe-1-standard-1-3-0

```{r}
seurat <- lapply(metadata$sample, loadInSpatial, prefix = params$prefix,
                 metadata = metadata, saveout = F, filename = metadata$files)

names(seurat) <- metadata$sample
```

## Filtering

Take only genes with non zero counts across all samples

```{r}
#| eval: true

seurat <- lapply(seurat, function(x) {x[rowSums(x) > 0, ]})
```

Remove "DEPRECATED-" genes

```{r}
#| eval: true

seurat <- lapply(seurat, function(x) {x[!grepl("DEPRECATED", rownames(x)), ]})
```

Test genes of interest still in final expression matrix

```{r}
#| results: false
#| echo: false

lapply(seurat, function(x) {stopifnot(colSums(FetchData(x, vars = params$marker)) > 0)})
```

## Reading in metrics

Load in extra html output

```{r}
metrics <- sapply(metadata$sample, collectMetrics, prefix = params$prefix,
                  filename = params$metrics)
```

Ready df

```{r}
# Transpose following collection of metrics
metrics <- as.data.frame(t(metrics))

# Make Sample id col character (column 1)
metrics[, "Sample.ID"] <- as.character(metrics[, "Sample.ID"])

# Make all other cols numeric
metrics[, 2:ncol(metrics)] <- as.numeric(unlist(metrics[, 2:ncol(metrics)]))
```

# Output

## RDS Output

Save out seurat experiment object

```{r}
saveRDS(seurat, file = "output/01-data-loading.rds")
```

## Metrics output

Save out metrics output

```{r}
write.csv(metrics, file = "output/metrics.csv", quote = F, row.names = F)
```

Print session information:

```{r}
sessionInfo()
```
