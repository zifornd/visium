---
title: "Integrate samples"
params:
  elbow_range:
    - "1:20"
  cluster:
    - "res.0.3"
  plot_width:
    - 5
  plot_height:
    - 4
---
  
# Setup
  
Add child documents

```{r}
#| child = "analysis/big-data.qmd"
```

Restore project dependencies:

```{r}
#renv::restore()
```

Load Bioconductor packages:
  
```{r, message=FALSE}
library(Seurat)
```

Load CRAN packages:
  
```{r, message=FALSE}
library(patchwork)
library(ggplot2)
library(dplyr)
library(reshape2)
library(viridis)
library(clustree)
```

Source user-defined functions:
  
```{r}
source("scripts/loadInSpatial.R")
source("scripts/normalise.R")
source("scripts/reduceDims.R")
source("scripts/cluster.R")
```

# Processing

Read experiment object:
  
```{r}
seuratList <- readRDS("output/05-clustering.rds")
```

## Integrate samples

```{r, warning=FALSE, message=FALSE}
seurat <- seuratIntegrate(seuratList)
```

## Dim Reduc

### PCA

PCA individual samples

```{r, warning=FALSE, message=FALSE}
seurat <- RunPCA(seurat)
```

### Plot PCAs

Individual PCA - dimplot

```{r, warning=FALSE, message=FALSE, fig.width = params$plot_width, fig.height = params$plot_height}
dimplot(seurat, reduction = "pca", label = FALSE, group.by = "Group", title = "PCA-Merged")
```

Individual PCA - featureplot ncount

```{r, warning=FALSE, message=FALSE, fig.width = params$plot_width, fig.height = params$plot_height}
featureplot(seurat, reduction = "pca", label = FALSE, feature = "nCount_Spatial", title = "PCA-Merged")
```

Individual PCA - featureplot nfeature

```{r, warning=FALSE, message=FALSE, fig.width = params$plot_width, fig.height = params$plot_height}
featureplot(seurat, reduction = "pca", label = FALSE, feature = "nFeature_Spatial", title = "PCA-Merged")
```

### Elbow

```{r, warning=FALSE, message=FALSE, fig.width = params$plot_width, fig.height = params$plot_height}
elbow(seurat, vline1 = 10, vline2 = 20, title = "Elbow-Merged")
```

From visual inspection it looks like the PCs for merged samples should be between 10-20 

Define elbow vector:
  
```{r, warning=FALSE}
elbow_vector <- params$elbow_range

print(elbow_vector)
```

Add PC elbow to object

```{r, warning=FALSE, message=FALSE}
seurat$Elbow <- rep(elbow_vector, length(seurat$Sample))
```

### UMAP

n.neighbors should be in the range 5 to 50.
min.dist sensible values are in the range 0.001 to 0.5.

```{r, Explore-Features-UMAP, warning=FALSE, message=FALSE, results='hide'}
seurat_1 <- umap(seurat, n.neighbors = 30, min.dist = 0.3)
seurat_2 <- umap(seurat, n.neighbors = 5, min.dist = 0.25)
seurat_3 <- umap(seurat, n.neighbors = 10, min.dist = 0.1)
seurat_4 <- umap(seurat, n.neighbors = 20, min.dist = 0.1)
seurat_5 <- umap(seurat, n.neighbors = 10, min.dist = 0.001)
```

UMAP n.neighbors = 30, min.dist = 0.3
```{r, fig.width = params$plot_width, fig.height = params$plot_height}
dimplot(seurat_1, reduction = "umap", label = FALSE, group.by = "Group", title = "UMAP-Merged n.neighbors = 30, min.dist = 0.3")
```

UMAP n.neighbors = 5, min.dist = 0.25
```{r, fig.width = params$plot_width, fig.height = params$plot_height}
dimplot(seurat_2, reduction = "umap", label = FALSE, group.by = "Group", title = "UMAP-Merged n.neighbors = 5, min.dist = 0.25")
```

UMAP n.neighbors = 10, min.dist = 0.1
```{r, fig.width = params$plot_width, fig.height = params$plot_height}
dimplot(seurat_3, reduction = "umap", label = FALSE, group.by = "Group", title = "UMAP-Merged n.neighbors = 10, min.dist = 0.1")
```

UMAP n.neighbors = 20, min.dist = 0.1
```{r, fig.width = params$plot_width, fig.height = params$plot_height}
dimplot(seurat_4, reduction = "umap", label = FALSE, group.by = "Group", title = "UMAP-Merged n.neighbors = 20, min.dist = 0.1")
```

UMAP n.neighbors = 10, min.dist = 0.001
```{r, fig.width = params$plot_width, fig.height = params$plot_height}
dimplot(seurat_5, reduction = "umap", label = FALSE, group.by = "Group", title = "UMAP-Merged n.neighbors = 10, min.dist = 0.001")
```

Clean up workspace
```{r}
rm(seurat_1, seurat_2, seurat_3, seurat_4, seurat_5)
gc()
```

### Chosen params UMAP

Run UMAP individual samples for choice of params (standard seems fine)
UMAP n.neighbors = 30, min.dist = 0.3

```{r, warning=FALSE, message=FALSE, results='hide'}
seurat <- umap(seurat)
```

### TSNE

perplexity parameter (should not be bigger than 3 * perplexity < nrow(X) - 1)
NB: Try N^1/2 as rule of thumb

### Chosen params TSNE

perplexity = N^1/2

```{r, warning=FALSE, message=FALSE, results='hide'}
seurat <- tsne(seurat)
```

```{r, fig.width = params$plot_width, fig.height = params$plot_height}
dimplot(seurat, reduction = "tsne", label = FALSE, group.by = "Group", title = "TSNE-Merged")
```

### Check scale data required

nCount_Spatial

```{r, fig.width = params$plot_width, fig.height = params$plot_height}
featureplot(seurat, reduction = "umap", label = FALSE, feature = "nCount_Spatial", title = "UMAP-Merged")
```

nFeature_Spatial

```{r, fig.width = params$plot_width, fig.height = params$plot_height}
featureplot(seurat, reduction = "umap", label = FALSE, feature = "nFeature_Spatial", title = "UMAP-Merged")
```

nCount_Spatial

```{r, fig.width = params$plot_width, fig.height = params$plot_height}
featureplot(seurat, reduction = "tsne", label = FALSE, feature = "nCount_Spatial", title = "TSNE-Merged")
```

nFeature_Spatial

```{r, fig.width = params$plot_width, fig.height = params$plot_height}
featureplot(seurat, reduction = "tsne", label = FALSE, feature = "nFeature_Spatial", title = "TSNE-Merged")
```

## Cluster

### SNN

```{r, warning=FALSE, message=FALSE, results='hide'}
seurat_1 <- snnCluster(seurat, k.param = 5, resolution = 0.1)
seurat_2 <- snnCluster(seurat, k.param = 10, resolution = 0.3)
seurat_3 <- snnCluster(seurat, k.param = 15, resolution = 0.5)
seurat_4 <- snnCluster(seurat, k.param = 20, resolution = 0.6)
seurat_5 <- snnCluster(seurat, k.param = 50, resolution = 0.8)
```

#### Plot umaps

k.param = 5, resolution = 0.1
```{r, fig.width = params$plot_width, fig.height = (params$plot_height + 1)}
dimplot(seurat_1, reduction = "umap", label = T, group.by = "seurat_clusters", title = "UMAP-Merged, k.param = 5, resolution = 0.1")
```
k.param = 10, resolution = 0.3
```{r, fig.width = params$plot_width, fig.height = (params$plot_height + 1)}
dimplot(seurat_2, reduction = "umap", label = T, group.by = "seurat_clusters", title = "UMAP-Merged, k.param = 10, resolution = 0.3")
```
k.param = 15, resolution = 0.5
```{r, fig.width = params$plot_width, fig.height = (params$plot_height + 1)}
dimplot(seurat_3, reduction = "umap", label = T, group.by = "seurat_clusters", title = "UMAP-Merged, k.param = 15, resolution = 0.5")
```
k.param = 20, resolution = 0.6
```{r, fig.width = params$plot_width, fig.height = (params$plot_height + 1)}
dimplot(seurat_4, reduction = "umap", label = T, group.by = "seurat_clusters", title = "UMAP-Merged, k.param = 20, resolution = 0.6")
```
k.param = 50, resolution = 0.8
```{r, fig.width = params$plot_width, fig.height = (params$plot_height + 1)}
dimplot(seurat_5, reduction = "umap", label = T, group.by = "seurat_clusters", title = "UMAP-Merged, k.param = 50, resolution = 0.8")
```
Clean up workspace
```{r}
rm(seurat_1, seurat_2, seurat_3, seurat_4, seurat_5)
gc()
```


#### Keeping k stable (saving into seurat object for clustree)

```{r, warning=FALSE, message=FALSE, results='hide'}
seurat <- snnCluster(seurat, k.param = 20, resolution = 0.1)
seurat <- snnCluster(seurat, k.param = 20, resolution = 0.2)
seurat <- snnCluster(seurat, k.param = 20, resolution = 0.3)
seurat <- snnCluster(seurat, k.param = 20, resolution = 0.5)
seurat <- snnCluster(seurat, k.param = 20, resolution = 0.6)
seurat <- snnCluster(seurat, k.param = 20, resolution = 0.8)
```

#### Plot umaps with k.params 20

k.param = 20, resolution = 0.1
```{r, fig.width = params$plot_width, fig.height = (params$plot_height + 1)}
dimplot(seurat, reduction = "umap", label = T, group.by = "res.0.1", title = "UMAP-Merged, k.param = 20, resolution = 0.1")
```
k.param = 20, resolution = 0.2
```{r, fig.width = params$plot_width, fig.height = (params$plot_height + 1)}
dimplot(seurat, reduction = "umap", label = T, group.by = "res.0.2", title = "UMAP-Merged, k.param = 20, resolution = 0.2")
```
k.param = 20, resolution = 0.3
```{r, fig.width = params$plot_width, fig.height = (params$plot_height + 1)}
dimplot(seurat, reduction = "umap", label = T, group.by = "res.0.3", title = "UMAP-Merged, k.param = 20, resolution = 0.3")
```
k.param = 20, resolution = 0.5
```{r, fig.width = params$plot_width, fig.height = (params$plot_height + 1)}
dimplot(seurat, reduction = "umap", label = T, group.by = "res.0.5", title = "UMAP-Merged, k.param = 20, resolution = 0.5")
```
k.param = 20, resolution = 0.6
```{r, fig.width = params$plot_width, fig.height = (params$plot_height + 1)}
dimplot(seurat, reduction = "umap", label = T, group.by = "res.0.6", title = "UMAP-Merged, k.param = 20, resolution = 0.6")
```
k.param = 20, resolution = 0.8
```{r, fig.width = params$plot_width, fig.height = (params$plot_height + 1)}
dimplot(seurat, reduction = "umap", label = T, group.by = "res.0.8", title = "UMAP-Merged, k.param = 20, resolution = 0.8")
```

### Clustree

Across k = 20 (seurat default)

Using clustree for checking cluster stability across params

```{r, fig.width = 10, fig.height = 10, warning=FALSE, message=FALSE}
clustreeRun(seurat)
```

### Silhouette 

Across k = 20 (seurat default)

A cell with a large positive width is closer to other cells from the same cluster compared to cells from different clusters. On the other hand, low or negative widths indicate that cells from different clusters are not well separated.

```{r, warning=FALSE, message=FALSE}
silhouettes_1 <- silhouette(seurat, clustername = "res.0.2", sample = "merged")
silhouettes_2 <- silhouette(seurat, clustername = "res.0.3", sample = "merged")
silhouettes_3 <- silhouette(seurat, clustername = "res.0.5", sample = "merged")
silhouettes_4 <- silhouette(seurat, clustername = "res.0.6", sample = "merged")
silhouettes_5 <- silhouette(seurat, clustername = "res.0.8", sample = "merged")
```

```{r, warning=FALSE, message=FALSE}
silhouette_plots_1 <- plotSil(silhouettes_1, type = "boxplot", title = "res.0.2")
silhouette_plots_2 <- plotSil(silhouettes_2, type = "boxplot", title = "res.0.3")
silhouette_plots_3 <- plotSil(silhouettes_3, type = "boxplot", title = "res.0.5")
silhouette_plots_4 <- plotSil(silhouettes_4, type = "boxplot", title = "res.0.6")
silhouette_plots_5 <- plotSil(silhouettes_5, type = "boxplot", title = "res.0.8")
```

#### Wrap plot silhouette

```{r, fig.width = 12, fig.height = 10}
wrap_plots(silhouette_plots_1,
           silhouette_plots_2,
           silhouette_plots_3,
           silhouette_plots_4,
           silhouette_plots_5,
           ncol = 2)
```

Clean up workspace
```{r}
rm(silhouettes_1, silhouettes_2, silhouettes_3, silhouettes_4, silhouettes_5)
gc()
```

### Spatial plot

#### Res 0.2 and 0.3
```{r, warning=FALSE, message=FALSE}
sdplot1 <- plotSpatialCluster(seurat, label = TRUE, label.size = 3, group = "res.0.2")
sdplot2 <- plotSpatialCluster(seurat, label = TRUE, label.size = 3, group = "res.0.3")
```

res.0.2
```{r, fig.width = 25, fig.height = 10}
wrap_plots(sdplot1, ncol = 3)
```
res.0.3
```{r, fig.width = 25, fig.height = 10}
wrap_plots(sdplot2, ncol = 3)
```

### Chosen params

```{r}
seurat <- addLabel(seurat, chosenCluster = params$cluster)
```

### Parse integrate 

```{r}
if(length(seuratList) > 1){

  seurat <- parseIntegrate(seurat)

}
```

# Output

Save experiment object:
  
```{r}
saveRDS(seurat, file = "output/07-integrate-samples.rds")
```

Print session information:
  
```{r}
sessionInfo()
```

